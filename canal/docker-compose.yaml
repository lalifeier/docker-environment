version: "3.7"

networks:
  app_net:
    external: true

services:
  mysql:
    image: mysql:5.7
    container_name: mysql
    hostname: mysql
    ports:
      - 3306:3306
    networks:
      - app_net
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - MYSQL_USER=lalifeir
      - MYSQL_PASSWORD=123456
      - MYSQL_ROOT_PASSWORD=123456
    volumes:
      - ./mysql/conf.d:/etc/mysql/conf.d
      - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      # - /data/mysql/data:/var/lib/mysql
      - /data/mysql/logs:/var/log/mysql

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - 2181:2181
    networks:
      - app_net
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    hostname: kafka
    ports:
      - 9092:9092
      - 9093:9093
      - 9999:9999
    networks:
      - app_net
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      # 允许使用PLAINTEXT协议(镜像中默认为关闭,需要手动开启)
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      # 关闭自动创建 topic 功能
      # - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      # 全局消息过期时间 6 小时(测试时可以设置短一点)
      # - KAFKA_CFG_LOG_RETENTION_HOURS=6
      # 开启JMX监控
      - JMX_PORT=9999
      # - KAFKA_JMX_OPTS=-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote.rmi.port=9999
    # volumes:
    #   - /data/kafka:/bitnami/kafka
    depends_on:
      - zookeeper

  efak:
    image: nickzurich/kafka-eagle:3.0.1
    container_name: efak
    ports:
      - 8048:8048
    networks:
      - app_net
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - EFAK_CLUSTER_ZK_LIST=zookeeper:2181
    depends_on:
      - kafka

  elasticsearch:
    image: elasticsearch:7.17.6
    container_name: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - app_net
    restart: always
    privileged: true
    environment:
      - TZ=Asia/Shanghai
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - node.name=elasticsearch
      - cluster.name=elasticsearch-cluster
      - network.bind_host=0.0.0.0
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false

  kibana:
    image: kibana:7.17.6
    container_name: kibana
    ports:
      - 5601:5601
    networks:
      - app_net
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  canal-server:
    image: canal/canal-server:v1.1.6
    container_name: canal-server
    ports:
      - 11111:11111
      - 11110:11110
    networks:
      - app_net
    restart: always
    environment:
      - TZ=Asia/Shanghai
      # - canal.auto.scan=false
      # - canal.destinations=test
      # - canal.instance.master.address=mysql:3306
      # - canal.instance.dbUsername=canal
      # - canal.instance.dbPassword=canal
      # - canal.instance.filter.regex=.*\\..*
      # - canal.instance.connectionCharset=UTF-8
      # - canal.instance.tsdb.enable=true
      # - canal.instance.gtidon=false
      - canal.admin.manager=canal-admin:8089
      - canal.admin.port=11110
      - canal.admin.user=admin
      # select password('123456');
      # mysql8.0 select upper(sha1(unhex(sha1('123456'))))
      - canal.admin.passwd=6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9
      # - canal.admin.register.cluster=test
    volumes:
      # - ./canal-server/conf:/home/admin/canal-server/conf
      - /data/canal/server/logs:/home/admin/canal-server/logs
    depends_on:
      - canal-admin

  # canal-adapter:
  #   # image: slpcat/canal-adapter:v1.1.5
  #   build:
  #     context: ./canal-adapter
  #   image: canal-adapter:latest
  #   container_name: canal-adapter
  #   ports:
  #     - 8081:8081
  #   networks:
  #     - app_net
  #   restart: always
  #   environment:
  #     - TZ=Asia/Shanghai
  #   volumes:
  #     # - ./canal-adapter/conf/application.yml:/opt/canal/adapter/conf/application.yml
  #     - ./canal-adapter/conf:/opt/canal/adapter/conf
  #     - /data/canal/adapter/logs:/opt/canal/adapter/logs
  #   depends_on:
  #     - canal-server

  canal-admin:
    image: canal/canal-admin:v1.1.6
    container_name: canal-admin
    ports:
      - 8089:8089
    networks:
      - app_net
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - server.port=8089
      - canal.adminUser=admin
      - canal.adminPasswd=123456
      - spring.datasource.address=mysql:3306
      - spring.datasource.database=canal_manager
      - spring.datasource.username=root
      - spring.datasource.password=123456
    volumes:
      - /data/canal/admin/logs:/home/admin/canal-admin/logs
    depends_on:
      - mysql
