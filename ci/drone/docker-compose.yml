version: "3.7"

networks:
  app_net:
    external: true

services:
  gitea:
    image: gitea/gitea:latest
    container_name: gitea
    ports:
      - "3000:3000"
      - "222:22"
    networks:
      - app_net
    restart: always
    privileged: true
    environment:
      - TZ=Asia/Shanghai
      - USER_UID=1000
      - USER_GID=1000
      - GITEA__database__DB_TYPE=postgres
      - GITEA__database__HOST=postgres:5432
      - GITEA__database__NAME=gitea
      - GITEA__database__USER=postgres
      - GITEA__database__PASSWD=123456
    volumes:
      - /data/docker/gitea/data:/data
    depends_on:
      - postgres

  postgres:
    image: postgres:alpine
    container_name: postgres
    ports:
      - 5432:5432
    networks:
      - app_net
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - POSTGRES_DB=gitea
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
    volumes:
      - /data/docker/postgres/data:/var/lib/postgresql/data

  drone-server:
    image: drone/drone:latest
    container_name: drone
    ports:
      - 80:80
      - 443:443
    networks:
      - app_net
    restart: always
    privileged: true
    environment:
      - TZ=Asia/Shanghai
      - DRONE_SERVER_PROTO=$DRONE_SERVER_PROTO
      - DRONE_SERVER_HOST=$DRONE_SERVER_HOST
      - DRONE_RPC_SECRET=$DRONE_RPC_SECRET
      - DRONE_USER_CREATE=username:lalifeier,admin:true
      - DRONE_DATABASE_DRIVER=postgres
      - DRONE_DATABASE_DATASOURCE=postgres://postgres:123456@postgres/drone?sslmode=disable
      - DRONE_GITEA_SERVER=$DRONE_GITEA_SERVER
      - DRONE_GITEA_CLIENT_ID=$DRONE_GITEA_CLIENT_ID
      - DRONE_GITEA_CLIENT_SECRET=$DRONE_GITEA_CLIENT_SECRET
      - DRONE_GITEE_SKIP_VERIFY=false
    volumes:
      - /data/docker/drone/data:/data
    depends_on:
      - postgres

  drone-runner:
    image: drone/drone-runner-docker:latest
    container_name: runner
    ports:
      - 3001:3000
    networks:
      - app_net
    restart: always
    privileged: true
    environment:
      - TZ=Asia/Shanghai
      - DRONE_RUNNER_NAME=drone-runner
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_RPC_PROTO=$DRONE_SERVER_PROTO
      - DRONE_RPC_HOST=$DRONE_SERVER_HOST
      - DRONE_RPC_SECRET=$DRONE_RPC_SECRET
      - DRONE_UI_USERNAME=admin
      - DRONE_UI_PASSWORD=123456
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - drone-server
