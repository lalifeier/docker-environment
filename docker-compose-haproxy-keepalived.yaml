version: "3.7"

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

services:
  # haproxy:
  #   image: haproxy:latest
  #   container_name: haproxy
  #   hostname: haproxy
  #   ports:
  #     - 8888:8888
  #   networks:
  #     - backend
  #   restart: always
  #   volumes:
  #     - ./haproxy/conf/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg

  haproxy-master:
    build:
      context: ./haproxy-keepalived
    container_name: haproxy-master
    hostname: haproxy-master
    ports:
      - 18001:8000
      - 10081:80
    networks:
      - backend
    restart: always
    privileged: true
    volumes:
      - ./haproxy-keepalived/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
      - ./haproxy-keepalived/keepalived/keepalived-master.conf:/etc/keepalived/keepalived.conf

  haproxy-backup:
    build:
      context: ./haproxy-keepalived
    container_name: haproxy-backup
    hostname: haproxy-backup
    ports:
      - 18002:8000
      - 10082:80
    networks:
      - backend
    restart: always
    privileged: true
    volumes:
      - ./haproxy-keepalived/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
      - ./haproxy-keepalived/keepalived/keepalived-backup.conf:/etc/keepalived/keepalived.conf

  nginx-node1:
    image: nginx:stable-alpine
    container_name: nginx-node1
    hostname: nginx-node1
    ports:
      - 1081:80
    networks:
      - backend
    restart: always
    volumes:
      - ./nginx-cluster/node1:/usr/share/nginx/html

  nginx-node2:
    image: nginx:stable-alpine
    container_name: nginx-node2
    hostname: nginx-node2
    ports:
      - 1082:80
    networks:
      - backend
    restart: always
    volumes:
      - ./nginx-cluster/node2:/usr/share/nginx/html

  nginx-node3:
    image: nginx:stable-alpine
    container_name: nginx-node3
    hostname: nginx-node3
    ports:
      - 1083:80
    networks:
      - backend
    restart: always
    volumes:
      - ./nginx-cluster/node3:/usr/share/nginx/html
