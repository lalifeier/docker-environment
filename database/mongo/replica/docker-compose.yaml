version: "3.7"

networks:
  app_net:
    external: true

services:
  mongo-rs1:
    image: mongo:6.0.2-focal
    container_name: mongo-rs1
    ports:
      - 37017:27017
    networks:
      - app_net
    restart: always
    # privileged: true
    environment:
      - TZ=Asia/Shanghai
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./conf:/data/configdb
      # - /data/mongo-replica/rs1/db:/data/db
      # - /data/mongo-replica/rs1/log:/var/log/mongodb
    command: mongod --config /data/configdb/mongod.conf
    healthcheck:
      test: test $$(echo "rs.status().ok" | mongo -u $${MONGO_INITDB_ROOT_USERNAME} -p $${MONGO_INITDB_ROOT_PASSWORD} --quiet) -eq 1
      # test: test $$(echo "rs.status().ok || rs.initiate({_id:'replset0',members:[{_id:0,host:\"mongo-rs1:27017\"},{_id:1,host:\"mongo-rs2:27017\"},{_id:2,host:\"mongo-rs3:27017\"}]}).ok" | mongo -u ${MONGO_INITDB_ROOT_USERNAME} -p ${MONGO_INITDB_ROOT_PASSWORD} --quiet) -eq 1
      interval: 10s
      start_period: 30s
      # retries: 3
    # entrypoint:
    #   - bash
    #   - -c
    #   - |
    #     chmod 400 /data/configdb/keyFile.key
    #     chown 999:999 /data/configdb/keyFile.key
    #     exec docker-entrypoint.sh $$@

  mongo-rs2:
    image: mongo:6.0.2-focal
    container_name: mongo-rs2
    ports:
      - 37018:27017
    networks:
      - app_net
    restart: always
    # privileged: true
    environment:
      - TZ=Asia/Shanghai
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./conf:/data/configdb
      # - /data/mongo-replica/rs2/db:/data/db
      # - /data/mongo-replica/rs2/log:/var/log/mongodb
    command: mongod --config /data/configdb/mongod.conf

  mongo-rs3:
    image: mongo:6.0.2-focal
    container_name: mongo-rs3
    ports:
      - 37019:27017
    networks:
      - app_net
    restart: always
    # privileged: true
    environment:
      - TZ=Asia/Shanghai
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./conf:/data/configdb
      # - /data/mongo-replica/rs3/db:/data/db
      # - /data/mongo-replica/rs3/log:/var/log/mongodb
    command: mongod --config /data/configdb/mongod.conf

  mongo-init:
    image: mongo:6.0.2-focal
    container_name: mongo-init
    networks:
      - app_net
    restart: on-failure:5
    # privileged: true
    environment:
      - TZ=Asia/Shanghai
    command:
      - mongosh
      - mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo-rs1:27017/admin
      # - --host mongo-rs1 --port 27017 -u ${MONGO_INITDB_ROOT_USERNAME} -p ${MONGO_INITDB_ROOT_PASSWORD}
      - --eval
      - 'rs.initiate({_id:"replset0", members: [{_id:0,host:"mongo-rs1:27017"},{_id:1,host:"mongo-rs2:27017"},{_id:2,host:"mongo-rs3:27017"}]});cfg = rs.conf();cfg.members[0].priority=2;rs.reconfig(cfg)'
    depends_on:
      - mongo-rs1
      - mongo-rs2
      - mongo-rs3

  # mongo-replica-setup:
  #   image: mongo:6.0.2-focal
  #   container_name: mongo-replica-setup
  #   restart: on-failure
  #   networks:
  #     - app_net
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
  #     MONGO_INITDB_ROOT_PASSWORD: ${DATABASEMONGO_INITDB_ROOT_PASSWORD_PASSWORD}
  #   volumes:
  #     - ./scripts/setup-replica.sh:/scripts/setup-replica.sh
  #   entrypoint: ["bash", "/scripts/setup-replica.sh"]
  #   depends_on:
  #     - mongo-rs1
  #     - mongo-rs2
  #     - mongo-rs3
