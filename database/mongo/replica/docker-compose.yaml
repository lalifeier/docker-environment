version: "3.7"

networks:
  app_net:
    external: true

services:
  mongo-rs1:
    image: mongo:latest
    container_name: mongo-rs1
    ports:
      - 37017:27017
    networks:
      - app_net
    restart: always
    # privileged: true
    environment:
      - TZ=Asia/Shanghai
      # - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      # - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./conf:/data/configdb
      # - /data/mongo-rs1/db:/data/db
      # - /data/mongo-rs1/log:/var/log/mongodb
    command: mongod --config /data/configdb/mongod.conf
    # healthcheck:
    #   # test: test $$(echo "rs.status().ok || rs.initiate().ok" | mongo --quiet) -eq 1
    #   #   # test: test $$(echo "rs.status().ok" | mongo -u $${MONGO_INITDB_ROOT_USERNAME} -p $${MONGO_INITDB_ROOT_PASSWORD} --quiet) -eq 1
    #   test: test $$(echo "rs.initiate({_id:'replset0',members:[{_id:0,host:\"mongo-rs1:27017\"},{_id:1,host:\"mongo-rs2:27017\"},{_id:2,host:\"mongo-rs3:27017\"}]}).ok || rs.status().ok" | mongo --port 27017 --quiet) -eq 1
    #   interval: 10s
    #   start_period: 30s
    entrypoint:
      - bash
      - -c
      - |
        chmod 400 /data/configdb/keyFile.key
        chown 999:999 /data/configdb/keyFile.key
        exec docker-entrypoint.sh $$@

  mongo-rs2:
    image: mongo:latest
    container_name: mongo-rs2
    ports:
      - 37018:27017
    networks:
      - app_net
    restart: always
    # privileged: true
    environment:
      - TZ=Asia/Shanghai
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./conf:/data/configdb
      # - /data/mongo-rs2/db:/data/db
      # - /data/mongo-rs2/log:/var/log/mongodb
    command: mongod --config /data/configdb/mongod.conf

  mongo-rs3:
    image: mongo:latest
    container_name: mongo-rs3
    ports:
      - 37019:27017
    networks:
      - app_net
    restart: always
    # privileged: true
    environment:
      - TZ=Asia/Shanghai
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./conf:/data/configdb
      # - /data/mongo-rs3/db:/data/db
      # - /data/mongo-rs3/log:/var/log/mongodb
    command: mongod --config /data/configdb/mongod.conf

  mongo-init:
    image: mongo:latest
    container_name: mongo-init
    networks:
      - app_net
    # restart: always
    # privileged: true
    environment:
      - TZ=Asia/Shanghai
    # command:
    #   - mongosh
    #   - --host mongo-rs1 --port 27017
    #   - --eval
    #   - 'rs.initiate({_id:"replset0", members: [{_id:0,host:"mongo-rs1:27017",priority:2},{_id:1,host:"mongo-rs2:27017",priority:1},{_id:2,host:"mongo-rs3:27017",arbiterOnly:true}]});cfg = rs.conf();cfg.members[0].priority=2;rs.reconfig(cfg, { force: true})'
    depends_on:
      - mongo-rs1
      - mongo-rs2
      - mongo-rs3
